{"ast":null,"code":"var _jsxFileName = \"/Users/ll/proizvodstvo/client/src/components/tasks/TaskForm.js\",\n  _s = $RefreshSig$();\n// client/src/components/tasks/TaskForm.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport { AuthContext } from '../../context/AuthContext';\nimport { SettingsContext } from '../../context/SettingsContext';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onTaskAdded\n}) => {\n  _s();\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n  const authContext = useContext(AuthContext);\n  const settingsContext = useContext(SettingsContext);\n  const {\n    createTask\n  } = taskContext;\n  const {\n    statuses\n  } = statusContext;\n  const {\n    user\n  } = authContext;\n  const {\n    settings\n  } = settingsContext;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('medium');\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [assignedTo, setAssignedTo] = useState([]);\n  const [dueDate, setDueDate] = useState(null);\n  const [customFields, setCustomFields] = useState({});\n  useEffect(() => {\n    // Установка первого статуса по умолчанию\n    if (statuses && statuses.length > 0 && !selectedStatus) {\n      setSelectedStatus(statuses[0]._id);\n    }\n\n    // Инициализация пользовательских полей\n    if (settings && settings.taskFields) {\n      const initialCustomFields = {};\n      settings.taskFields.forEach(field => {\n        initialCustomFields[field.name] = '';\n      });\n      setCustomFields(initialCustomFields);\n    }\n  }, [statuses, settings, selectedStatus]);\n  const onSubmit = async e => {\n    e.preventDefault();\n    const newTask = {\n      title,\n      description,\n      priority,\n      status: selectedStatus,\n      assignedTo: user ? [user._id] : [],\n      // По умолчанию задача назначается создателю\n      dueDate,\n      customFields\n    };\n    const result = await createTask(newTask);\n    if (result) {\n      // Сброс формы\n      setTitle('');\n      setDescription('');\n      setPriority('medium');\n      setDueDate(null);\n\n      // Сброс пользовательских полей\n      if (settings && settings.taskFields) {\n        const initialCustomFields = {};\n        settings.taskFields.forEach(field => {\n          initialCustomFields[field.name] = '';\n        });\n        setCustomFields(initialCustomFields);\n      }\n\n      // Уведомление родительского компонента\n      if (onTaskAdded) {\n        onTaskAdded(result);\n      }\n    }\n  };\n  const handleCustomFieldChange = (fieldName, value) => {\n    setCustomFields({\n      ...customFields,\n      [fieldName]: value\n    });\n  };\n  const renderCustomFields = () => {\n    if (!settings || !settings.taskFields) return null;\n    return settings.taskFields.map(field => {\n      // Рендеринг в зависимости от типа поля\n      switch (field.type) {\n        case 'text':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: field.name,\n              value: customFields[field.name] || '',\n              onChange: e => handleCustomFieldChange(field.name, e.target.value),\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this);\n        case 'number':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: field.name,\n              value: customFields[field.name] || '',\n              onChange: e => handleCustomFieldChange(field.name, e.target.value),\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this);\n        case 'date':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: customFields[field.name] ? new Date(customFields[field.name]) : null,\n              onChange: date => handleCustomFieldChange(field.name, date),\n              className: \"form-control\",\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this);\n        case 'dropdown':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: field.name,\n              value: customFields[field.name] || '',\n              onChange: e => handleCustomFieldChange(field.name, e.target.value),\n              required: field.required,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), field.options && field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this);\n        case 'checkbox':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: field.name,\n              name: field.name,\n              checked: customFields[field.name] || false,\n              onChange: e => handleCustomFieldChange(field.name, e.target.checked),\n              required: field.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this);\n        default:\n          return null;\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"priority\",\n        children: \"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"priority\",\n        value: priority,\n        onChange: e => setPriority(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"\\u041D\\u0438\\u0437\\u043A\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"\\u0412\\u044B\\u0441\\u043E\\u043A\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: selectedStatus,\n        onChange: e => setSelectedStatus(e.target.value),\n        required: true,\n        children: statuses && statuses.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: status._id,\n          children: status.name\n        }, status._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dueDate\",\n        children: \"\\u0421\\u0440\\u043E\\u043A \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: dueDate,\n        onChange: date => setDueDate(date),\n        className: \"form-control\",\n        placeholderText: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), renderCustomFields(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"PY32bkQRXANTP69uSCnb0SnQnQg=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","TaskContext","StatusContext","AuthContext","SettingsContext","DatePicker","jsxDEV","_jsxDEV","TaskForm","onTaskAdded","_s","taskContext","statusContext","authContext","settingsContext","createTask","statuses","user","settings","title","setTitle","description","setDescription","priority","setPriority","selectedStatus","setSelectedStatus","assignedTo","setAssignedTo","dueDate","setDueDate","customFields","setCustomFields","length","_id","taskFields","initialCustomFields","forEach","field","name","onSubmit","e","preventDefault","newTask","status","result","handleCustomFieldChange","fieldName","value","renderCustomFields","map","type","className","children","htmlFor","required","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","selected","Date","date","options","option","id","checked","rows","placeholderText","_c","$RefreshReg$"],"sources":["/Users/ll/proizvodstvo/client/src/components/tasks/TaskForm.js"],"sourcesContent":["// client/src/components/tasks/TaskForm.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport { AuthContext } from '../../context/AuthContext';\nimport { SettingsContext } from '../../context/SettingsContext';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst TaskForm = ({ onTaskAdded }) => {\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n  const authContext = useContext(AuthContext);\n  const settingsContext = useContext(SettingsContext);\n\n  const { createTask } = taskContext;\n  const { statuses } = statusContext;\n  const { user } = authContext;\n  const { settings } = settingsContext;\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('medium');\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [assignedTo, setAssignedTo] = useState([]);\n  const [dueDate, setDueDate] = useState(null);\n  const [customFields, setCustomFields] = useState({});\n\n  useEffect(() => {\n    // Установка первого статуса по умолчанию\n    if (statuses && statuses.length > 0 && !selectedStatus) {\n      setSelectedStatus(statuses[0]._id);\n    }\n\n    // Инициализация пользовательских полей\n    if (settings && settings.taskFields) {\n      const initialCustomFields = {};\n      settings.taskFields.forEach(field => {\n        initialCustomFields[field.name] = '';\n      });\n      setCustomFields(initialCustomFields);\n    }\n  }, [statuses, settings, selectedStatus]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const newTask = {\n      title,\n      description,\n      priority,\n      status: selectedStatus,\n      assignedTo: user ? [user._id] : [], // По умолчанию задача назначается создателю\n      dueDate,\n      customFields\n    };\n\n    const result = await createTask(newTask);\n    \n    if (result) {\n      // Сброс формы\n      setTitle('');\n      setDescription('');\n      setPriority('medium');\n      setDueDate(null);\n      \n      // Сброс пользовательских полей\n      if (settings && settings.taskFields) {\n        const initialCustomFields = {};\n        settings.taskFields.forEach(field => {\n          initialCustomFields[field.name] = '';\n        });\n        setCustomFields(initialCustomFields);\n      }\n\n      // Уведомление родительского компонента\n      if (onTaskAdded) {\n        onTaskAdded(result);\n      }\n    }\n  };\n\n  const handleCustomFieldChange = (fieldName, value) => {\n    setCustomFields({\n      ...customFields,\n      [fieldName]: value\n    });\n  };\n\n  const renderCustomFields = () => {\n    if (!settings || !settings.taskFields) return null;\n\n    return settings.taskFields.map(field => {\n      // Рендеринг в зависимости от типа поля\n      switch (field.type) {\n        case 'text':\n          return (\n            <div className=\"form-group\" key={field.name}>\n              <label htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              <input\n                type=\"text\"\n                name={field.name}\n                value={customFields[field.name] || ''}\n                onChange={e => handleCustomFieldChange(field.name, e.target.value)}\n                required={field.required}\n              />\n            </div>\n          );\n        case 'number':\n          return (\n            <div className=\"form-group\" key={field.name}>\n              <label htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              <input\n                type=\"number\"\n                name={field.name}\n                value={customFields[field.name] || ''}\n                onChange={e => handleCustomFieldChange(field.name, e.target.value)}\n                required={field.required}\n              />\n            </div>\n          );\n        case 'date':\n          return (\n            <div className=\"form-group\" key={field.name}>\n              <label htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              <DatePicker\n                selected={customFields[field.name] ? new Date(customFields[field.name]) : null}\n                onChange={date => handleCustomFieldChange(field.name, date)}\n                className=\"form-control\"\n                required={field.required}\n              />\n            </div>\n          );\n        case 'dropdown':\n          return (\n            <div className=\"form-group\" key={field.name}>\n              <label htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              <select\n                name={field.name}\n                value={customFields[field.name] || ''}\n                onChange={e => handleCustomFieldChange(field.name, e.target.value)}\n                required={field.required}\n              >\n                <option value=\"\">Выберите...</option>\n                {field.options && field.options.map(option => (\n                  <option key={option} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n          );\n        case 'checkbox':\n          return (\n            <div className=\"form-group checkbox\" key={field.name}>\n              <input\n                type=\"checkbox\"\n                id={field.name}\n                name={field.name}\n                checked={customFields[field.name] || false}\n                onChange={e => handleCustomFieldChange(field.name, e.target.checked)}\n                required={field.required}\n              />\n              <label htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n            </div>\n          );\n        default:\n          return null;\n      }\n    });\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"task-form\">\n      <h2>Создать новую задачу</h2>\n      <div className=\"form-group\">\n        <label htmlFor=\"title\">Название <span className=\"required\">*</span></label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"description\">Описание</label>\n        <textarea\n          name=\"description\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          rows=\"4\"\n        ></textarea>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"priority\">Приоритет</label>\n        <select\n          name=\"priority\"\n          value={priority}\n          onChange={e => setPriority(e.target.value)}\n        >\n          <option value=\"low\">Низкий</option>\n          <option value=\"medium\">Средний</option>\n          <option value=\"high\">Высокий</option>\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"status\">Статус <span className=\"required\">*</span></label>\n        <select\n          name=\"status\"\n          value={selectedStatus}\n          onChange={e => setSelectedStatus(e.target.value)}\n          required\n        >\n          {statuses && statuses.map(status => (\n            <option key={status._id} value={status._id}>\n              {status.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"dueDate\">Срок выполнения</label>\n        <DatePicker\n          selected={dueDate}\n          onChange={date => setDueDate(date)}\n          className=\"form-control\"\n          placeholderText=\"Выберите дату\"\n        />\n      </div>\n\n      {/* Пользовательские поля */}\n      {renderCustomFields()}\n\n      <div className=\"form-group\">\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Создать задачу\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}