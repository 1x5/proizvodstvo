{"ast":null,"code":"var _jsxFileName = \"/Users/ll/proizvodstvo/client/src/components/tasks/TaskList.js\",\n  _s = $RefreshSig$();\n// client/src/components/tasks/TaskList.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport Spinner from '../layout/Spinner';\nimport './TaskItem.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n  const {\n    tasks,\n    loading,\n    getTasks\n  } = taskContext;\n  const {\n    statuses,\n    getStatuses\n  } = statusContext;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('all');\n  const [sortBy, setSortBy] = useState('deadline');\n  useEffect(() => {\n    getTasks();\n    getStatuses();\n    // eslint-disable-next-line\n  }, []);\n\n  // Настройка периодического обновления списка задач каждые 30 секунд\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      getTasks();\n    }, 30000); // 30 секунд\n\n    return () => clearInterval(intervalId); // Очистка интервала при размонтировании\n    // eslint-disable-next-line\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  const groupTasksByStatus = () => {\n    const groupedTasks = {};\n\n    // Инициализация групп для всех статусов\n    if (statuses && statuses.length > 0) {\n      statuses.forEach(status => {\n        groupedTasks[status._id] = {\n          status,\n          tasks: []\n        };\n      });\n\n      // Фильтрация и сортировка задач\n      let filteredTasks = tasks || [];\n\n      // Применение поиска\n      if (searchTerm) {\n        const term = searchTerm.toLowerCase();\n        filteredTasks = filteredTasks.filter(task => task.title && task.title.toLowerCase().includes(term) || task.description && task.description.toLowerCase().includes(term));\n      }\n\n      // Применение фильтра по категории\n      if (filterCategory !== 'all') {\n        filteredTasks = filteredTasks.filter(task => task.category === filterCategory);\n      }\n\n      // Применение сортировки\n      switch (sortBy) {\n        case 'deadline':\n          filteredTasks.sort((a, b) => {\n            if (!a.dueDate) return 1;\n            if (!b.dueDate) return -1;\n            return new Date(a.dueDate) - new Date(b.dueDate);\n          });\n          break;\n        case 'priority':\n          const priorityOrder = {\n            high: 1,\n            medium: 2,\n            low: 3\n          };\n          filteredTasks.sort((a, b) => priorityOrder[a.priority || 'medium'] - priorityOrder[b.priority || 'medium']);\n          break;\n        case 'created':\n          filteredTasks.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n          break;\n        default:\n          break;\n      }\n\n      // Распределение задач по группам\n      filteredTasks.forEach(task => {\n        const statusId = typeof task.status === 'object' ? task.status._id : task.status;\n        if (statusId && groupedTasks[statusId]) {\n          groupedTasks[statusId].tasks.push(task);\n        } else {\n          // Если статус не найден в списке или его нет, добавляем в \"Неизвестный статус\"\n          const unknownId = \"unknown\";\n          if (!groupedTasks[unknownId]) {\n            groupedTasks[unknownId] = {\n              status: {\n                _id: unknownId,\n                name: \"Неизвестный статус\",\n                color: \"#CCCCCC\"\n              },\n              tasks: []\n            };\n          }\n          groupedTasks[unknownId].tasks.push(task);\n        }\n      });\n    } else {\n      // Если статусы не загружены, создаем временную группу \"Неизвестный статус\"\n      const unknownId = \"unknown\";\n      groupedTasks[unknownId] = {\n        status: {\n          _id: unknownId,\n          name: \"Неизвестный статус\",\n          color: \"#CCCCCC\"\n        },\n        tasks: tasks || []\n      };\n    }\n    return Object.values(groupedTasks);\n  };\n\n  // Получаем иконку в зависимости от статуса\n  const getStatusIcon = statusName => {\n    if (!statusName) return \"fas fa-question\";\n    const name = statusName.toLowerCase();\n    if (name.includes(\"новый\") || name.includes(\"заказ\")) {\n      return \"fas fa-file\";\n    } else if (name.includes(\"работе\") || name.includes(\"процессе\")) {\n      return \"fas fa-spinner\";\n    } else if (name.includes(\"сварен\")) {\n      return \"fas fa-tools\";\n    } else if (name.includes(\"покрашен\")) {\n      return \"fas fa-paint-brush\";\n    } else if (name.includes(\"разработка\")) {\n      return \"fas fa-code\";\n    } else {\n      return \"fas fa-tasks\";\n    }\n  };\n\n  // Форматирование даты\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU');\n  };\n\n  // Определение класса приоритета\n  const getPriorityClass = priority => {\n    if (!priority) return '';\n    switch (priority.toLowerCase()) {\n      case 'high':\n      case 'высокий':\n        return 'priority-high';\n      case 'medium':\n      case 'средний':\n        return 'priority-medium';\n      case 'low':\n      case 'низкий':\n        return 'priority-low';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-board-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"task-board-title\",\n        children: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tasks/new\",\n        className: \"btn btn-primary add-task-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-filters\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: filterCategory,\n            onChange: e => setFilterCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"\\u0412\\u0441\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"development\",\n              children: \"\\u0420\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"design\",\n              children: \"\\u0414\\u0438\\u0437\\u0430\\u0439\\u043D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"marketing\",\n              children: \"\\u041C\\u0430\\u0440\\u043A\\u0435\\u0442\\u0438\\u043D\\u0433\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: sortBy,\n            onChange: e => setSortBy(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"deadline\",\n              children: \"\\u041F\\u043E \\u0441\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"priority\",\n              children: \"\\u041F\\u043E \\u043F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"created\",\n              children: \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), !tasks || tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"empty-state-title\",\n        children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-state-description\",\n        children: \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\\\", \\u0447\\u0442\\u043E\\u0431\\u044B \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-columns\",\n      children: groupTasksByStatus().map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-header\",\n          style: {\n            borderBottomColor: group.status.color || 'var(--primary-color)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: getStatusIcon(group.status.name),\n              style: {\n                color: group.status.color || 'var(--primary-color)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), group.status.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-count\",\n            style: {\n              backgroundColor: group.status.color || 'var(--primary-color)'\n            },\n            children: group.tasks.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), group.tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-column\",\n          children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447 \\u0432 \\u044D\\u0442\\u043E\\u043C \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-grid\",\n          children: group.tasks.map(task => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tasks/${task._id}`,\n            className: \"task-link\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-card ${getPriorityClass(task.priority)}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"task-title\",\n                children: task.title || \"Без названия\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 25\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"task-description\",\n                children: task.description.length > 100 ? `${task.description.substring(0, 100)}...` : task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-info\",\n                  children: task.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-due-date\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"far fa-calendar-alt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 33\n                    }, this), formatDate(task.dueDate)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-assignee\",\n                  children: task.assignedTo && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"far fa-user\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 33\n                    }, this), typeof task.assignedTo === 'object' ? task.assignedTo.name : 'Назначено']\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 23\n            }, this)\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this)]\n      }, group.status._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"71A2ZV7XAVw7e8BqJmTjJL4IOsI=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","TaskContext","StatusContext","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","taskContext","statusContext","tasks","loading","getTasks","statuses","getStatuses","searchTerm","setSearchTerm","filterCategory","setFilterCategory","sortBy","setSortBy","intervalId","setInterval","clearInterval","fileName","_jsxFileName","lineNumber","columnNumber","groupTasksByStatus","groupedTasks","length","forEach","status","_id","filteredTasks","term","toLowerCase","filter","task","title","includes","description","category","sort","a","b","dueDate","Date","priorityOrder","high","medium","low","priority","createdAt","statusId","push","unknownId","name","color","Object","values","getStatusIcon","statusName","formatDate","dateString","date","toLocaleDateString","getPriorityClass","className","children","to","type","placeholder","value","onChange","e","target","map","group","style","borderBottomColor","backgroundColor","substring","assignedTo","_c","$RefreshReg$"],"sources":["/Users/ll/proizvodstvo/client/src/components/tasks/TaskList.js"],"sourcesContent":["// client/src/components/tasks/TaskList.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport Spinner from '../layout/Spinner';\nimport './TaskItem.css';\n\nconst TaskList = () => {\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n\n  const { tasks, loading, getTasks } = taskContext;\n  const { statuses, getStatuses } = statusContext;\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('all');\n  const [sortBy, setSortBy] = useState('deadline');\n\n  useEffect(() => {\n    getTasks();\n    getStatuses();\n    // eslint-disable-next-line\n  }, []);\n\n  // Настройка периодического обновления списка задач каждые 30 секунд\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      getTasks();\n    }, 30000); // 30 секунд\n\n    return () => clearInterval(intervalId); // Очистка интервала при размонтировании\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  const groupTasksByStatus = () => {\n    const groupedTasks = {};\n    \n    // Инициализация групп для всех статусов\n    if (statuses && statuses.length > 0) {\n      statuses.forEach(status => {\n        groupedTasks[status._id] = {\n          status,\n          tasks: []\n        };\n      });\n\n      // Фильтрация и сортировка задач\n      let filteredTasks = tasks || [];\n      \n      // Применение поиска\n      if (searchTerm) {\n        const term = searchTerm.toLowerCase();\n        filteredTasks = filteredTasks.filter(task => \n          (task.title && task.title.toLowerCase().includes(term)) || \n          (task.description && task.description.toLowerCase().includes(term))\n        );\n      }\n      \n      // Применение фильтра по категории\n      if (filterCategory !== 'all') {\n        filteredTasks = filteredTasks.filter(task => \n          task.category === filterCategory\n        );\n      }\n      \n      // Применение сортировки\n      switch (sortBy) {\n        case 'deadline':\n          filteredTasks.sort((a, b) => {\n            if (!a.dueDate) return 1;\n            if (!b.dueDate) return -1;\n            return new Date(a.dueDate) - new Date(b.dueDate);\n          });\n          break;\n        case 'priority':\n          const priorityOrder = { high: 1, medium: 2, low: 3 };\n          filteredTasks.sort((a, b) => \n            priorityOrder[a.priority || 'medium'] - priorityOrder[b.priority || 'medium']\n          );\n          break;\n        case 'created':\n          filteredTasks.sort((a, b) => \n            new Date(b.createdAt) - new Date(a.createdAt)\n          );\n          break;\n        default:\n          break;\n      }\n\n      // Распределение задач по группам\n      filteredTasks.forEach(task => {\n        const statusId = typeof task.status === 'object' ? task.status._id : task.status;\n        \n        if (statusId && groupedTasks[statusId]) {\n          groupedTasks[statusId].tasks.push(task);\n        } else {\n          // Если статус не найден в списке или его нет, добавляем в \"Неизвестный статус\"\n          const unknownId = \"unknown\";\n          if (!groupedTasks[unknownId]) {\n            groupedTasks[unknownId] = {\n              status: { \n                _id: unknownId, \n                name: \"Неизвестный статус\", \n                color: \"#CCCCCC\" \n              },\n              tasks: []\n            };\n          }\n          groupedTasks[unknownId].tasks.push(task);\n        }\n      });\n    } else {\n      // Если статусы не загружены, создаем временную группу \"Неизвестный статус\"\n      const unknownId = \"unknown\";\n      groupedTasks[unknownId] = {\n        status: { \n          _id: unknownId, \n          name: \"Неизвестный статус\", \n          color: \"#CCCCCC\" \n        },\n        tasks: tasks || []\n      };\n    }\n\n    return Object.values(groupedTasks);\n  };\n\n  // Получаем иконку в зависимости от статуса\n  const getStatusIcon = (statusName) => {\n    if (!statusName) return \"fas fa-question\";\n    \n    const name = statusName.toLowerCase();\n    if (name.includes(\"новый\") || name.includes(\"заказ\")) {\n      return \"fas fa-file\";\n    } else if (name.includes(\"работе\") || name.includes(\"процессе\")) {\n      return \"fas fa-spinner\";\n    } else if (name.includes(\"сварен\")) {\n      return \"fas fa-tools\";\n    } else if (name.includes(\"покрашен\")) {\n      return \"fas fa-paint-brush\";\n    } else if (name.includes(\"разработка\")) {\n      return \"fas fa-code\";\n    } else {\n      return \"fas fa-tasks\";\n    }\n  };\n\n  // Форматирование даты\n  const formatDate = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU');\n  };\n\n  // Определение класса приоритета\n  const getPriorityClass = (priority) => {\n    if (!priority) return '';\n    switch (priority.toLowerCase()) {\n      case 'high':\n      case 'высокий':\n        return 'priority-high';\n      case 'medium':\n      case 'средний':\n        return 'priority-medium';\n      case 'low':\n      case 'низкий':\n        return 'priority-low';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"task-board-container\">\n      <div className=\"task-board-header\">\n        <h1 className=\"task-board-title\">Задачи</h1>\n        <Link to=\"/tasks/new\" className=\"btn btn-primary add-task-btn\">\n          <i className=\"fas fa-plus\"></i> Добавить задачу\n        </Link>\n      </div>\n      \n      <div className=\"task-filters\">\n        <div className=\"filter-row\">\n          <div className=\"search-box\">\n            <i className=\"fas fa-search\"></i>\n            <input\n              type=\"text\"\n              placeholder=\"Поиск задач...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </div>\n          \n          <div className=\"filter-group\">\n            <select \n              className=\"form-control\"\n              value={filterCategory}\n              onChange={e => setFilterCategory(e.target.value)}\n            >\n              <option value=\"all\">Все категории</option>\n              <option value=\"development\">Разработка</option>\n              <option value=\"design\">Дизайн</option>\n              <option value=\"marketing\">Маркетинг</option>\n            </select>\n          </div>\n          \n          <div className=\"filter-group\">\n            <select \n              className=\"form-control\"\n              value={sortBy}\n              onChange={e => setSortBy(e.target.value)}\n            >\n              <option value=\"deadline\">По сроку</option>\n              <option value=\"priority\">По приоритету</option>\n              <option value=\"created\">По дате создания</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {!tasks || tasks.length === 0 ? (\n        <div className=\"empty-state\">\n          <div className=\"empty-state-icon\">\n            <i className=\"fas fa-tasks\"></i>\n          </div>\n          <h3 className=\"empty-state-title\">Нет задач</h3>\n          <p className=\"empty-state-description\">Нажмите \"Добавить задачу\", чтобы создать новую задачу</p>\n        </div>\n      ) : (\n        <div className=\"task-columns\">\n          {groupTasksByStatus().map(group => (\n            <div \n              key={group.status._id} \n              className=\"task-column\"\n            >\n              <div className=\"column-header\" style={{ borderBottomColor: group.status.color || 'var(--primary-color)' }}>\n                <div className=\"column-title\">\n                  <i className={getStatusIcon(group.status.name)} style={{ color: group.status.color || 'var(--primary-color)' }}></i>\n                  {group.status.name}\n                </div>\n                <span \n                  className=\"task-count\"\n                  style={{ backgroundColor: group.status.color || 'var(--primary-color)' }}\n                >\n                  {group.tasks.length}\n                </span>\n              </div>\n              \n              {group.tasks.length === 0 ? (\n                <div className=\"empty-column\">\n                  Нет задач в этом статусе\n                </div>\n              ) : (\n                <div className=\"tasks-grid\">\n                  {group.tasks.map(task => (\n                    <Link key={task._id} to={`/tasks/${task._id}`} className=\"task-link\">\n                      <div className={`task-card ${getPriorityClass(task.priority)}`}>\n                        <h3 className=\"task-title\">{task.title || \"Без названия\"}</h3>\n                        {task.description && (\n                          <p className=\"task-description\">\n                            {task.description.length > 100\n                              ? `${task.description.substring(0, 100)}...`\n                              : task.description}\n                          </p>\n                        )}\n                        <div className=\"task-meta\">\n                          <div className=\"task-info\">\n                            {task.dueDate && (\n                              <div className=\"task-due-date\">\n                                <i className=\"far fa-calendar-alt\"></i>\n                                {formatDate(task.dueDate)}\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"task-assignee\">\n                            {task.assignedTo && (\n                              <>\n                                <i className=\"far fa-user\"></i>\n                                {typeof task.assignedTo === 'object' \n                                  ? task.assignedTo.name \n                                  : 'Назначено'}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}