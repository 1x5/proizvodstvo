{"ast":null,"code":"var _jsxFileName = \"/Users/ll/proizvodstvo/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\n// client/src/context/AuthContext.js\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport authReducer from './reducers/authReducer';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Начальное состояние\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  error: null\n};\n\n// Создание контекста\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\n\n// Провайдер контекста\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Загрузка пользователя\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get('/api/auth/me');\n      dispatch({\n        type: 'USER_LOADED',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n    }\n  };\n\n  // Регистрация пользователя\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/auth/register', formData, config);\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: 'REGISTER_FAIL',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Вход пользователя\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/auth/login', formData, config);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: 'LOGIN_FAIL',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Выход пользователя\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  // Очистка ошибок\n  const clearErrors = () => {\n    dispatch({\n      type: 'CLEAR_ERRORS'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      login,\n      logout,\n      loadUser,\n      clearErrors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useReducer","axios","authReducer","setAuthToken","jsxDEV","_jsxDEV","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","AuthContext","AuthProvider","children","_s","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ll/proizvodstvo/client/src/context/AuthContext.js"],"sourcesContent":["// client/src/context/AuthContext.js\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport authReducer from './reducers/authReducer';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Начальное состояние\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  error: null\n};\n\n// Создание контекста\nexport const AuthContext = createContext(initialState);\n\n// Провайдер контекста\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Загрузка пользователя\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth/me');\n\n      dispatch({\n        type: 'USER_LOADED',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n    }\n  };\n\n  // Регистрация пользователя\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth/register', formData, config);\n\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: res.data\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: 'REGISTER_FAIL',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Вход пользователя\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth/login', formData, config);\n\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: 'LOGIN_FAIL',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Выход пользователя\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  // Очистка ошибок\n  const clearErrors = () => {\n    dispatch({ type: 'CLEAR_ERRORS' });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        login,\n        logout,\n        loadUser,\n        clearErrors\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,YAAY,MAAM,uBAAuB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,IAAI;EACbC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,gBAAGf,aAAa,CAACO,YAAY,CAAC;;AAEtD;AACA,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,UAAU,CAACE,WAAW,EAAEI,YAAY,CAAC;;EAE/D;EACA,MAAMc,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIZ,YAAY,CAACD,KAAK,EAAE;MACtBJ,YAAY,CAACK,YAAY,CAACD,KAAK,CAAC;IAClC;IAEA,IAAI;MACF,MAAMc,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,cAAc,CAAC;MAE3CH,QAAQ,CAAC;QACPI,IAAI,EAAE,aAAa;QACnBC,OAAO,EAAEH,GAAG,CAACI;MACf,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZP,QAAQ,CAAC;QACPI,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMI,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,IAAI;MACF,MAAMT,GAAG,GAAG,MAAMpB,KAAK,CAAC8B,IAAI,CAAC,oBAAoB,EAAEH,QAAQ,EAAEC,MAAM,CAAC;MAEpEV,QAAQ,CAAC;QACPI,IAAI,EAAE,kBAAkB;QACxBC,OAAO,EAAEH,GAAG,CAACI;MACf,CAAC,CAAC;MAEFL,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZP,QAAQ,CAAC;QACPI,IAAI,EAAE,eAAe;QACrBC,OAAO,EAAEE,GAAG,CAACM,QAAQ,CAACP,IAAI,CAACQ;MAC7B,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMC,KAAK,GAAG,MAAON,QAAQ,IAAK;IAChC,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,IAAI;MACF,MAAMT,GAAG,GAAG,MAAMpB,KAAK,CAAC8B,IAAI,CAAC,iBAAiB,EAAEH,QAAQ,EAAEC,MAAM,CAAC;MAEjEV,QAAQ,CAAC;QACPI,IAAI,EAAE,eAAe;QACrBC,OAAO,EAAEH,GAAG,CAACI;MACf,CAAC,CAAC;MAEFL,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZP,QAAQ,CAAC;QACPI,IAAI,EAAE,YAAY;QAClBC,OAAO,EAAEE,GAAG,CAACM,QAAQ,CAACP,IAAI,CAACQ;MAC7B,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBhB,QAAQ,CAAC;MAAEI,IAAI,EAAE;IAAS,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxBjB,QAAQ,CAAC;MAAEI,IAAI,EAAE;IAAe,CAAC,CAAC;EACpC,CAAC;EAED,oBACElB,OAAA,CAACS,WAAW,CAACuB,QAAQ;IACnBC,KAAK,EAAE;MACL/B,KAAK,EAAEW,KAAK,CAACX,KAAK;MAClBG,eAAe,EAAEQ,KAAK,CAACR,eAAe;MACtCC,OAAO,EAAEO,KAAK,CAACP,OAAO;MACtBC,IAAI,EAAEM,KAAK,CAACN,IAAI;MAChBC,KAAK,EAAEK,KAAK,CAACL,KAAK;MAClBc,QAAQ;MACRO,KAAK;MACLC,MAAM;MACNf,QAAQ;MACRgB;IACF,CAAE;IAAApB,QAAA,EAEDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CArGWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}