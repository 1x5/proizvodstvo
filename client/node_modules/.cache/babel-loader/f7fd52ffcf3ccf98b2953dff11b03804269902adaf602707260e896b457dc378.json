{"ast":null,"code":"var _jsxFileName = \"/Users/ll/proizvodstvo/client/src/components/tasks/TaskForm.js\",\n  _s = $RefreshSig$();\n// client/src/components/tasks/TaskForm.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport { AuthContext } from '../../context/AuthContext';\nimport { SettingsContext } from '../../context/SettingsContext';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onTaskAdded,\n  onClose\n}) => {\n  _s();\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n  const authContext = useContext(AuthContext);\n  const settingsContext = useContext(SettingsContext);\n  const {\n    createTask\n  } = taskContext;\n  const {\n    statuses\n  } = statusContext;\n  const {\n    user\n  } = authContext;\n  const {\n    settings\n  } = settingsContext;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('medium');\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [assignedTo, setAssignedTo] = useState([]);\n  const [dueDate, setDueDate] = useState(null);\n  const [customFields, setCustomFields] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    // Установка первого статуса по умолчанию\n    if (statuses && statuses.length > 0 && !selectedStatus) {\n      setSelectedStatus(statuses[0]._id);\n    }\n\n    // Инициализация пользовательских полей\n    if (settings && settings.taskFields) {\n      const initialCustomFields = {};\n      settings.taskFields.forEach(field => {\n        initialCustomFields[field.name] = '';\n      });\n      setCustomFields(initialCustomFields);\n    }\n  }, [statuses, settings, selectedStatus]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!title.trim()) {\n      newErrors.title = 'Название задачи обязательно';\n    }\n    if (!selectedStatus) {\n      newErrors.status = 'Статус обязателен';\n    }\n\n    // Проверка обязательных пользовательских полей\n    if (settings && settings.taskFields) {\n      settings.taskFields.forEach(field => {\n        if (field.required && !customFields[field.name]) {\n          newErrors[field.name] = `Поле \"${field.name}\" обязательно`;\n        }\n      });\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    const newTask = {\n      title,\n      description,\n      priority,\n      status: selectedStatus,\n      assignedTo: user ? [user._id] : [],\n      dueDate,\n      customFields\n    };\n    try {\n      const result = await createTask(newTask);\n      if (result) {\n        // Сброс формы\n        setTitle('');\n        setDescription('');\n        setPriority('medium');\n        setDueDate(null);\n\n        // Сброс пользовательских полей\n        if (settings && settings.taskFields) {\n          const initialCustomFields = {};\n          settings.taskFields.forEach(field => {\n            initialCustomFields[field.name] = '';\n          });\n          setCustomFields(initialCustomFields);\n        }\n\n        // Очистка ошибок\n        setErrors({});\n\n        // Уведомление родительского компонента\n        if (onTaskAdded) {\n          onTaskAdded(result);\n        }\n\n        // Закрыть форму если передан колбэк\n        if (onClose) {\n          onClose();\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при создании задачи:', error);\n      setErrors({\n        submit: 'Ошибка при создании задачи. Пожалуйста, попробуйте снова.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleCustomFieldChange = (fieldName, value) => {\n    setCustomFields({\n      ...customFields,\n      [fieldName]: value\n    });\n\n    // Очистка ошибки поля при изменении\n    if (errors[fieldName]) {\n      setErrors({\n        ...errors,\n        [fieldName]: undefined\n      });\n    }\n  };\n  const renderCustomFields = () => {\n    if (!settings || !settings.taskFields) return null;\n    return settings.taskFields.map(field => {\n      // Рендеринг в зависимости от типа поля\n      switch (field.type) {\n        case 'text':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: field.name,\n              id: field.name,\n              value: customFields[field.name] || '',\n              onChange: e => handleCustomFieldChange(field.name, e.target.value),\n              required: field.required,\n              className: `form-control ${errors[field.name] ? 'error-border' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), errors[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errors[field.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 38\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this);\n        case 'number':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: field.name,\n              id: field.name,\n              value: customFields[field.name] || '',\n              onChange: e => handleCustomFieldChange(field.name, e.target.value),\n              required: field.required,\n              className: `form-control ${errors[field.name] ? 'error-border' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), errors[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errors[field.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 38\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this);\n        case 'date':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: customFields[field.name] ? new Date(customFields[field.name]) : null,\n              onChange: date => handleCustomFieldChange(field.name, date),\n              className: `form-control ${errors[field.name] ? 'error-border' : ''}`,\n              required: field.required,\n              dateFormat: \"dd.MM.yyyy\",\n              placeholderText: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n              id: field.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), errors[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errors[field.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 38\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this);\n        case 'dropdown':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: field.name,\n              id: field.name,\n              value: customFields[field.name] || '',\n              onChange: e => handleCustomFieldChange(field.name, e.target.value),\n              required: field.required,\n              className: `form-select ${errors[field.name] ? 'error-border' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), field.options && field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), errors[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errors[field.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 38\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this);\n        case 'checkbox':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: field.name,\n              name: field.name,\n              checked: customFields[field.name] || false,\n              onChange: e => handleCustomFieldChange(field.name, e.target.checked),\n              required: field.required,\n              className: `form-check-input ${errors[field.name] ? 'error-border' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: field.name,\n              children: [field.name, \" \", field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), errors[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: errors[field.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 38\n            }, this)]\n          }, field.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this);\n        default:\n          return null;\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [errors.submit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: errors.submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"title\",\n          children: [\"Task name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: title,\n          onChange: e => {\n            setTitle(e.target.value);\n            if (errors.title) setErrors({\n              ...errors,\n              title: undefined\n            });\n          },\n          className: `form-control ${errors.title ? 'error-border' : ''}`,\n          placeholder: \"Enter task name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), errors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          className: \"form-control\",\n          rows: \"4\",\n          placeholder: \"Describe the task details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"priority\",\n            name: \"priority\",\n            value: priority,\n            onChange: e => setPriority(e.target.value),\n            className: \"form-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"status\",\n            children: [\"Status \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"status\",\n            name: \"status\",\n            value: selectedStatus,\n            onChange: e => {\n              setSelectedStatus(e.target.value);\n              if (errors.status) setErrors({\n                ...errors,\n                status: undefined\n              });\n            },\n            className: `form-select ${errors.status ? 'error-border' : ''}`,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), statuses && statuses.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status._id,\n              children: status.name\n            }, status._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), errors.status && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: errors.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"dueDate\",\n          children: \"Due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          id: \"dueDate\",\n          selected: dueDate,\n          onChange: date => setDueDate(date),\n          className: \"form-control\",\n          placeholderText: \"Select due date\",\n          dateFormat: \"dd.MM.yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), settings && settings.taskFields && settings.taskFields.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-fields-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"form-subtitle\",\n          children: \"Additional fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), renderCustomFields()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => onClose ? onClose() : null,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Creating...' : 'Create Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"xaFDL0SlwY6Uy2mVsJbm8IMfAho=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","TaskContext","StatusContext","AuthContext","SettingsContext","DatePicker","jsxDEV","_jsxDEV","TaskForm","onTaskAdded","onClose","_s","taskContext","statusContext","authContext","settingsContext","createTask","statuses","user","settings","title","setTitle","description","setDescription","priority","setPriority","selectedStatus","setSelectedStatus","assignedTo","setAssignedTo","dueDate","setDueDate","customFields","setCustomFields","isSubmitting","setIsSubmitting","errors","setErrors","length","_id","taskFields","initialCustomFields","forEach","field","name","validateForm","newErrors","trim","status","required","Object","keys","onSubmit","e","preventDefault","newTask","result","error","console","submit","handleCustomFieldChange","fieldName","value","undefined","renderCustomFields","map","type","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","target","selected","Date","date","dateFormat","placeholderText","options","option","checked","placeholder","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ll/proizvodstvo/client/src/components/tasks/TaskForm.js"],"sourcesContent":["// client/src/components/tasks/TaskForm.js\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport { AuthContext } from '../../context/AuthContext';\nimport { SettingsContext } from '../../context/SettingsContext';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst TaskForm = ({ onTaskAdded, onClose }) => {\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n  const authContext = useContext(AuthContext);\n  const settingsContext = useContext(SettingsContext);\n\n  const { createTask } = taskContext;\n  const { statuses } = statusContext;\n  const { user } = authContext;\n  const { settings } = settingsContext;\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('medium');\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [assignedTo, setAssignedTo] = useState([]);\n  const [dueDate, setDueDate] = useState(null);\n  const [customFields, setCustomFields] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    // Установка первого статуса по умолчанию\n    if (statuses && statuses.length > 0 && !selectedStatus) {\n      setSelectedStatus(statuses[0]._id);\n    }\n\n    // Инициализация пользовательских полей\n    if (settings && settings.taskFields) {\n      const initialCustomFields = {};\n      settings.taskFields.forEach(field => {\n        initialCustomFields[field.name] = '';\n      });\n      setCustomFields(initialCustomFields);\n    }\n  }, [statuses, settings, selectedStatus]);\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!title.trim()) {\n      newErrors.title = 'Название задачи обязательно';\n    }\n    \n    if (!selectedStatus) {\n      newErrors.status = 'Статус обязателен';\n    }\n    \n    // Проверка обязательных пользовательских полей\n    if (settings && settings.taskFields) {\n      settings.taskFields.forEach(field => {\n        if (field.required && !customFields[field.name]) {\n          newErrors[field.name] = `Поле \"${field.name}\" обязательно`;\n        }\n      });\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setIsSubmitting(true);\n\n    const newTask = {\n      title,\n      description,\n      priority,\n      status: selectedStatus,\n      assignedTo: user ? [user._id] : [], \n      dueDate,\n      customFields\n    };\n\n    try {\n      const result = await createTask(newTask);\n      \n      if (result) {\n        // Сброс формы\n        setTitle('');\n        setDescription('');\n        setPriority('medium');\n        setDueDate(null);\n        \n        // Сброс пользовательских полей\n        if (settings && settings.taskFields) {\n          const initialCustomFields = {};\n          settings.taskFields.forEach(field => {\n            initialCustomFields[field.name] = '';\n          });\n          setCustomFields(initialCustomFields);\n        }\n\n        // Очистка ошибок\n        setErrors({});\n\n        // Уведомление родительского компонента\n        if (onTaskAdded) {\n          onTaskAdded(result);\n        }\n        \n        // Закрыть форму если передан колбэк\n        if (onClose) {\n          onClose();\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при создании задачи:', error);\n      setErrors({ submit: 'Ошибка при создании задачи. Пожалуйста, попробуйте снова.' });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCustomFieldChange = (fieldName, value) => {\n    setCustomFields({\n      ...customFields,\n      [fieldName]: value\n    });\n    \n    // Очистка ошибки поля при изменении\n    if (errors[fieldName]) {\n      setErrors({\n        ...errors,\n        [fieldName]: undefined\n      });\n    }\n  };\n\n  const renderCustomFields = () => {\n    if (!settings || !settings.taskFields) return null;\n\n    return settings.taskFields.map(field => {\n      // Рендеринг в зависимости от типа поля\n      switch (field.type) {\n        case 'text':\n          return (\n            <div className=\"form-group\" key={field.name}>\n              <label className=\"form-label\" htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              <input\n                type=\"text\"\n                name={field.name}\n                id={field.name}\n                value={customFields[field.name] || ''}\n                onChange={e => handleCustomFieldChange(field.name, e.target.value)}\n                required={field.required}\n                className={`form-control ${errors[field.name] ? 'error-border' : ''}`}\n              />\n              {errors[field.name] && <div className=\"error-message\">{errors[field.name]}</div>}\n            </div>\n          );\n        case 'number':\n          return (\n            <div className=\"form-group\" key={field.name}>\n              <label className=\"form-label\" htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              <input\n                type=\"number\"\n                name={field.name}\n                id={field.name}\n                value={customFields[field.name] || ''}\n                onChange={e => handleCustomFieldChange(field.name, e.target.value)}\n                required={field.required}\n                className={`form-control ${errors[field.name] ? 'error-border' : ''}`}\n              />\n              {errors[field.name] && <div className=\"error-message\">{errors[field.name]}</div>}\n            </div>\n          );\n        case 'date':\n          return (\n            <div className=\"form-group\" key={field.name}>\n              <label className=\"form-label\" htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              <DatePicker\n                selected={customFields[field.name] ? new Date(customFields[field.name]) : null}\n                onChange={date => handleCustomFieldChange(field.name, date)}\n                className={`form-control ${errors[field.name] ? 'error-border' : ''}`}\n                required={field.required}\n                dateFormat=\"dd.MM.yyyy\"\n                placeholderText=\"Выберите дату\"\n                id={field.name}\n              />\n              {errors[field.name] && <div className=\"error-message\">{errors[field.name]}</div>}\n            </div>\n          );\n        case 'dropdown':\n          return (\n            <div className=\"form-group\" key={field.name}>\n              <label className=\"form-label\" htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              <select\n                name={field.name}\n                id={field.name}\n                value={customFields[field.name] || ''}\n                onChange={e => handleCustomFieldChange(field.name, e.target.value)}\n                required={field.required}\n                className={`form-select ${errors[field.name] ? 'error-border' : ''}`}\n              >\n                <option value=\"\">Выберите...</option>\n                {field.options && field.options.map(option => (\n                  <option key={option} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n              {errors[field.name] && <div className=\"error-message\">{errors[field.name]}</div>}\n            </div>\n          );\n        case 'checkbox':\n          return (\n            <div className=\"form-check\" key={field.name}>\n              <input\n                type=\"checkbox\"\n                id={field.name}\n                name={field.name}\n                checked={customFields[field.name] || false}\n                onChange={e => handleCustomFieldChange(field.name, e.target.checked)}\n                required={field.required}\n                className={`form-check-input ${errors[field.name] ? 'error-border' : ''}`}\n              />\n              <label className=\"form-check-label\" htmlFor={field.name}>\n                {field.name} {field.required && <span className=\"required\">*</span>}\n              </label>\n              {errors[field.name] && <div className=\"error-message\">{errors[field.name]}</div>}\n            </div>\n          );\n        default:\n          return null;\n      }\n    });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"form-header\">\n        <h2 className=\"form-title\">New Task</h2>\n      </div>\n      \n      <form onSubmit={onSubmit}>\n        {errors.submit && (\n          <div className=\"alert alert-danger\">{errors.submit}</div>\n        )}\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"title\">\n            Task name <span className=\"required\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            onChange={e => {\n              setTitle(e.target.value);\n              if (errors.title) setErrors({...errors, title: undefined});\n            }}\n            className={`form-control ${errors.title ? 'error-border' : ''}`}\n            placeholder=\"Enter task name\"\n            required\n          />\n          {errors.title && <div className=\"error-message\">{errors.title}</div>}\n        </div>\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"description\">Description</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            className=\"form-control\"\n            rows=\"4\"\n            placeholder=\"Describe the task details\"\n          ></textarea>\n        </div>\n        \n        <div className=\"form-row\">\n          <div className=\"form-col\">\n            <label className=\"form-label\" htmlFor=\"priority\">Priority</label>\n            <select\n              id=\"priority\"\n              name=\"priority\"\n              value={priority}\n              onChange={e => setPriority(e.target.value)}\n              className=\"form-select\"\n            >\n              <option value=\"low\">Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n          \n          <div className=\"form-col\">\n            <label className=\"form-label\" htmlFor=\"status\">\n              Status <span className=\"required\">*</span>\n            </label>\n            <select\n              id=\"status\"\n              name=\"status\"\n              value={selectedStatus}\n              onChange={e => {\n                setSelectedStatus(e.target.value);\n                if (errors.status) setErrors({...errors, status: undefined});\n              }}\n              className={`form-select ${errors.status ? 'error-border' : ''}`}\n              required\n            >\n              <option value=\"\">Select status</option>\n              {statuses && statuses.map(status => (\n                <option key={status._id} value={status._id}>\n                  {status.name}\n                </option>\n              ))}\n            </select>\n            {errors.status && <div className=\"error-message\">{errors.status}</div>}\n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <label className=\"form-label\" htmlFor=\"dueDate\">Due date</label>\n          <DatePicker\n            id=\"dueDate\"\n            selected={dueDate}\n            onChange={date => setDueDate(date)}\n            className=\"form-control\"\n            placeholderText=\"Select due date\"\n            dateFormat=\"dd.MM.yyyy\"\n          />\n        </div>\n\n        {/* Пользовательские поля */}\n        {settings && settings.taskFields && settings.taskFields.length > 0 && (\n          <div className=\"custom-fields-section\">\n            <h3 className=\"form-subtitle\">Additional fields</h3>\n            {renderCustomFields()}\n          </div>\n        )}\n\n        <div className=\"form-actions\">\n          <button \n            type=\"button\" \n            className=\"btn btn-secondary\"\n            onClick={() => onClose ? onClose() : null}\n          >\n            Cancel\n          </button>\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\" \n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Creating...' : 'Create Task'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}