{"ast":null,"code":"var _jsxFileName = \"/Users/ll/proizvodstvo/client/src/context/StatusContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport statusReducer from './reducers/statusReducer';\n\n// Начальное состояние\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  statuses: [],\n  loading: true,\n  error: null\n};\n\n// Создание контекста\nexport const StatusContext = /*#__PURE__*/createContext(initialState);\n\n// Провайдер контекста\nexport const StatusProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(statusReducer, initialState);\n\n  // Получение всех статусов\n  const getStatuses = async () => {\n    try {\n      const res = await axios.get('/api/statuses');\n      dispatch({\n        type: 'GET_STATUSES',\n        payload: res.data\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Ошибка получения статусов'\n      });\n    }\n  };\n\n  // Создание нового статуса\n  const createStatus = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/statuses', formData, config);\n      dispatch({\n        type: 'ADD_STATUS',\n        payload: res.data\n      });\n      return res.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.msg) || 'Ошибка создания статуса'\n      });\n      return null;\n    }\n  };\n\n  // Обновление статуса\n  const updateStatus = async (id, formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.put(`/api/statuses/${id}`, formData, config);\n      dispatch({\n        type: 'UPDATE_STATUS',\n        payload: res.data\n      });\n      return res.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.msg) || 'Ошибка обновления статуса'\n      });\n      return null;\n    }\n  };\n\n  // Обновление порядка статусов\n  const updateStatusOrder = async statusOrder => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.put('/api/statuses', {\n        statusOrder\n      }, config);\n      dispatch({\n        type: 'UPDATE_STATUSES',\n        payload: res.data\n      });\n      return res.data;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.msg) || 'Ошибка обновления порядка статусов'\n      });\n      return null;\n    }\n  };\n\n  // Удаление статуса\n  const deleteStatus = async id => {\n    try {\n      await axios.delete(`/api/statuses/${id}`);\n      dispatch({\n        type: 'DELETE_STATUS',\n        payload: id\n      });\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.msg) || 'Ошибка удаления статуса'\n      });\n    }\n  };\n\n  // Очистка ошибок\n  const clearErrors = () => {\n    dispatch({\n      type: 'CLEAR_ERRORS'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(StatusContext.Provider, {\n    value: {\n      statuses: state.statuses,\n      loading: state.loading,\n      error: state.error,\n      getStatuses,\n      createStatus,\n      updateStatus,\n      updateStatusOrder,\n      deleteStatus,\n      clearErrors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = StatusProvider;\nvar _c;\n$RefreshReg$(_c, \"StatusProvider\");","map":{"version":3,"names":["React","createContext","useReducer","axios","statusReducer","jsxDEV","_jsxDEV","initialState","statuses","loading","error","StatusContext","StatusProvider","children","_s","state","dispatch","getStatuses","res","get","type","payload","data","err","_err$response","_err$response$data","response","msg","createStatus","formData","config","headers","post","_err$response2","_err$response2$data","updateStatus","id","put","_err$response3","_err$response3$data","updateStatusOrder","statusOrder","_err$response4","_err$response4$data","deleteStatus","delete","_err$response5","_err$response5$data","clearErrors","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ll/proizvodstvo/client/src/context/StatusContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport statusReducer from './reducers/statusReducer';\n\n// Начальное состояние\nconst initialState = {\n  statuses: [],\n  loading: true,\n  error: null\n};\n\n// Создание контекста\nexport const StatusContext = createContext(initialState);\n\n// Провайдер контекста\nexport const StatusProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(statusReducer, initialState);\n\n  // Получение всех статусов\n  const getStatuses = async () => {\n    try {\n      const res = await axios.get('/api/statuses');\n\n      dispatch({\n        type: 'GET_STATUSES',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: err.response?.data?.msg || 'Ошибка получения статусов'\n      });\n    }\n  };\n\n  // Создание нового статуса\n  const createStatus = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/statuses', formData, config);\n\n      dispatch({\n        type: 'ADD_STATUS',\n        payload: res.data\n      });\n\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: err.response?.data?.msg || 'Ошибка создания статуса'\n      });\n      return null;\n    }\n  };\n\n  // Обновление статуса\n  const updateStatus = async (id, formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/statuses/${id}`, formData, config);\n\n      dispatch({\n        type: 'UPDATE_STATUS',\n        payload: res.data\n      });\n\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: err.response?.data?.msg || 'Ошибка обновления статуса'\n      });\n      return null;\n    }\n  };\n\n  // Обновление порядка статусов\n  const updateStatusOrder = async (statusOrder) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put('/api/statuses', { statusOrder }, config);\n\n      dispatch({\n        type: 'UPDATE_STATUSES',\n        payload: res.data\n      });\n\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: err.response?.data?.msg || 'Ошибка обновления порядка статусов'\n      });\n      return null;\n    }\n  };\n\n  // Удаление статуса\n  const deleteStatus = async (id) => {\n    try {\n      await axios.delete(`/api/statuses/${id}`);\n\n      dispatch({\n        type: 'DELETE_STATUS',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'STATUS_ERROR',\n        payload: err.response?.data?.msg || 'Ошибка удаления статуса'\n      });\n    }\n  };\n\n  // Очистка ошибок\n  const clearErrors = () => {\n    dispatch({ type: 'CLEAR_ERRORS' });\n  };\n\n  return (\n    <StatusContext.Provider\n      value={{\n        statuses: state.statuses,\n        loading: state.loading,\n        error: state.error,\n        getStatuses,\n        createStatus,\n        updateStatus,\n        updateStatusOrder,\n        deleteStatus,\n        clearErrors\n      }}\n    >\n      {children}\n    </StatusContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}