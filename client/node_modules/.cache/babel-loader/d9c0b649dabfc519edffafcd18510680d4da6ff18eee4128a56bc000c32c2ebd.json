{"ast":null,"code":"var _jsxFileName = \"/Users/ll/proizvodstvo/client/src/components/tasks/TaskList.js\",\n  _s = $RefreshSig$();\n// client/src/components/tasks/TaskList.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport { SettingsContext } from '../../context/SettingsContext';\nimport Spinner from '../layout/Spinner';\nimport './TaskItem.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  searchTerm,\n  filterCategory,\n  onAddTask\n}) => {\n  _s();\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n  const settingsContext = useContext(SettingsContext);\n  const {\n    tasks,\n    loading,\n    getTasks\n  } = taskContext;\n  const {\n    statuses,\n    getStatuses\n  } = statusContext;\n  const {\n    settings\n  } = settingsContext;\n  const [sortBy, setSortBy] = useState('deadline');\n  useEffect(() => {\n    getTasks();\n    getStatuses();\n    // eslint-disable-next-line\n  }, []);\n\n  // Настройка периодического обновления списка задач каждые 30 секунд\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      getTasks();\n    }, 30000); // 30 секунд\n\n    return () => clearInterval(intervalId); // Очистка интервала при размонтировании\n    // eslint-disable-next-line\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  const groupTasksByStatus = () => {\n    const groupedTasks = {};\n\n    // Инициализация групп для всех статусов\n    if (statuses && statuses.length > 0) {\n      statuses.forEach(status => {\n        groupedTasks[status._id] = {\n          status,\n          tasks: []\n        };\n      });\n\n      // Фильтрация и сортировка задач\n      let filteredTasks = tasks || [];\n\n      // Применение поиска\n      if (searchTerm) {\n        const term = searchTerm.toLowerCase();\n        filteredTasks = filteredTasks.filter(task => task.title && task.title.toLowerCase().includes(term) || task.description && task.description.toLowerCase().includes(term));\n      }\n\n      // Применение фильтра по категории\n      if (filterCategory !== 'all') {\n        filteredTasks = filteredTasks.filter(task => task.category === filterCategory);\n      }\n\n      // Применение сортировки\n      switch (sortBy) {\n        case 'deadline':\n          filteredTasks.sort((a, b) => {\n            if (!a.dueDate) return 1;\n            if (!b.dueDate) return -1;\n            return new Date(a.dueDate) - new Date(b.dueDate);\n          });\n          break;\n        case 'priority':\n          const priorityOrder = {\n            high: 1,\n            medium: 2,\n            low: 3\n          };\n          filteredTasks.sort((a, b) => priorityOrder[a.priority || 'medium'] - priorityOrder[b.priority || 'medium']);\n          break;\n        case 'created':\n          filteredTasks.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n          break;\n        default:\n          break;\n      }\n\n      // Распределение задач по группам\n      filteredTasks.forEach(task => {\n        const statusId = typeof task.status === 'object' ? task.status._id : task.status;\n        if (statusId && groupedTasks[statusId]) {\n          groupedTasks[statusId].tasks.push(task);\n        } else {\n          // Если статус не найден в списке или его нет, добавляем в \"Неизвестный статус\"\n          const unknownId = \"unknown\";\n          if (!groupedTasks[unknownId]) {\n            groupedTasks[unknownId] = {\n              status: {\n                _id: unknownId,\n                name: \"Неизвестный статус\",\n                color: \"#CCCCCC\"\n              },\n              tasks: []\n            };\n          }\n          groupedTasks[unknownId].tasks.push(task);\n        }\n      });\n    } else {\n      // Если статусы не загружены, создаем временную группу \"Неизвестный статус\"\n      const unknownId = \"unknown\";\n      groupedTasks[unknownId] = {\n        status: {\n          _id: unknownId,\n          name: \"Неизвестный статус\",\n          color: \"#CCCCCC\"\n        },\n        tasks: tasks || []\n      };\n    }\n    return Object.values(groupedTasks);\n  };\n\n  // Получаем иконку в зависимости от статуса\n  const getStatusIcon = statusName => {\n    if (!statusName) return \"fas fa-question\";\n    const name = statusName.toLowerCase();\n    if (name.includes(\"новый\") || name.includes(\"заказ\")) {\n      return \"fas fa-file\";\n    } else if (name.includes(\"работе\") || name.includes(\"процессе\")) {\n      return \"fas fa-spinner\";\n    } else if (name.includes(\"сварен\")) {\n      return \"fas fa-tools\";\n    } else if (name.includes(\"покрашен\")) {\n      return \"fas fa-paint-brush\";\n    } else if (name.includes(\"разработка\")) {\n      return \"fas fa-code\";\n    } else {\n      return \"fas fa-tasks\";\n    }\n  };\n\n  // Форматирование даты\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU');\n  };\n\n  // Определение класса приоритета\n  const getPriorityClass = priority => {\n    if (!priority) return '';\n    switch (priority.toLowerCase()) {\n      case 'high':\n      case 'высокий':\n        return 'priority-high';\n      case 'medium':\n      case 'средний':\n        return 'priority-medium';\n      case 'low':\n      case 'низкий':\n        return 'priority-low';\n      default:\n        return '';\n    }\n  };\n\n  // Получение названия категории по ID\n  const getCategoryName = categoryId => {\n    if (!categoryId || !settings || !settings.categories) return '';\n    const category = settings.categories.find(c => c.id === categoryId);\n    return category ? category.name : '';\n  };\n\n  // Получение цвета категории по ID\n  const getCategoryColor = categoryId => {\n    if (!categoryId || !settings || !settings.categories) return '';\n    const category = settings.categories.find(c => c.id === categoryId);\n    return category ? category.color : '';\n  };\n\n  // Главная часть компонента\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"deadline\",\n          children: \"\\u041F\\u043E \\u0441\\u0440\\u043E\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"priority\",\n          children: \"\\u041F\\u043E \\u043F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created\",\n          children: \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), !tasks || tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"empty-state-title\",\n        children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-state-description\",\n        children: \"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\\\", \\u0447\\u0442\\u043E\\u0431\\u044B \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddTask,\n        className: \"btn btn-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-columns\",\n      children: groupTasksByStatus().map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-header\",\n          style: {\n            borderBottomColor: group.status.color || 'var(--primary-color)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: getStatusIcon(group.status.name),\n              style: {\n                color: group.status.color || 'var(--primary-color)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), group.status.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-count\",\n            style: {\n              backgroundColor: group.status.color || 'var(--primary-color)'\n            },\n            children: group.tasks.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), group.tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-column\",\n          children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447 \\u0432 \\u044D\\u0442\\u043E\\u043C \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-grid\",\n          children: group.tasks.map(task => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tasks/${task._id}`,\n            className: \"task-link\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-card ${getPriorityClass(task.priority)}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"task-title\",\n                children: task.title || \"Без названия\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 25\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"task-description\",\n                children: task.description.length > 100 ? `${task.description.substring(0, 100)}...` : task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-info\",\n                  children: [task.category && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"task-category\",\n                    style: {\n                      backgroundColor: `${getCategoryColor(task.category)}20`,\n                      color: getCategoryColor(task.category)\n                    },\n                    children: getCategoryName(task.category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 31\n                  }, this), task.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-due-date\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"far fa-calendar-alt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 33\n                    }, this), formatDate(task.dueDate)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-assignee\",\n                  children: task.assignedTo && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"far fa-user\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 33\n                    }, this), typeof task.assignedTo === 'object' ? task.assignedTo.name : 'Назначено']\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 23\n            }, this)\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this)]\n      }, group.status._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"drABPS7mtkv6m2tKaeaUjlqO0cU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","TaskContext","StatusContext","SettingsContext","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","searchTerm","filterCategory","onAddTask","_s","taskContext","statusContext","settingsContext","tasks","loading","getTasks","statuses","getStatuses","settings","sortBy","setSortBy","intervalId","setInterval","clearInterval","fileName","_jsxFileName","lineNumber","columnNumber","groupTasksByStatus","groupedTasks","length","forEach","status","_id","filteredTasks","term","toLowerCase","filter","task","title","includes","description","category","sort","a","b","dueDate","Date","priorityOrder","high","medium","low","priority","createdAt","statusId","push","unknownId","name","color","Object","values","getStatusIcon","statusName","formatDate","dateString","date","toLocaleDateString","getPriorityClass","getCategoryName","categoryId","categories","find","c","id","getCategoryColor","children","className","value","onChange","e","target","onClick","map","group","style","borderBottomColor","backgroundColor","to","substring","assignedTo","_c","$RefreshReg$"],"sources":["/Users/ll/proizvodstvo/client/src/components/tasks/TaskList.js"],"sourcesContent":["// client/src/components/tasks/TaskList.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport { SettingsContext } from '../../context/SettingsContext';\nimport Spinner from '../layout/Spinner';\nimport './TaskItem.css';\n\nconst TaskList = ({ searchTerm, filterCategory, onAddTask }) => {\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n  const settingsContext = useContext(SettingsContext);\n\n  const { tasks, loading, getTasks } = taskContext;\n  const { statuses, getStatuses } = statusContext;\n  const { settings } = settingsContext;\n  \n  const [sortBy, setSortBy] = useState('deadline');\n\n  useEffect(() => {\n    getTasks();\n    getStatuses();\n    // eslint-disable-next-line\n  }, []);\n\n  // Настройка периодического обновления списка задач каждые 30 секунд\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      getTasks();\n    }, 30000); // 30 секунд\n\n    return () => clearInterval(intervalId); // Очистка интервала при размонтировании\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  const groupTasksByStatus = () => {\n    const groupedTasks = {};\n    \n    // Инициализация групп для всех статусов\n    if (statuses && statuses.length > 0) {\n      statuses.forEach(status => {\n        groupedTasks[status._id] = {\n          status,\n          tasks: []\n        };\n      });\n\n      // Фильтрация и сортировка задач\n      let filteredTasks = tasks || [];\n      \n      // Применение поиска\n      if (searchTerm) {\n        const term = searchTerm.toLowerCase();\n        filteredTasks = filteredTasks.filter(task => \n          (task.title && task.title.toLowerCase().includes(term)) || \n          (task.description && task.description.toLowerCase().includes(term))\n        );\n      }\n      \n      // Применение фильтра по категории\n      if (filterCategory !== 'all') {\n        filteredTasks = filteredTasks.filter(task => \n          task.category === filterCategory\n        );\n      }\n      \n      // Применение сортировки\n      switch (sortBy) {\n        case 'deadline':\n          filteredTasks.sort((a, b) => {\n            if (!a.dueDate) return 1;\n            if (!b.dueDate) return -1;\n            return new Date(a.dueDate) - new Date(b.dueDate);\n          });\n          break;\n        case 'priority':\n          const priorityOrder = { high: 1, medium: 2, low: 3 };\n          filteredTasks.sort((a, b) => \n            priorityOrder[a.priority || 'medium'] - priorityOrder[b.priority || 'medium']\n          );\n          break;\n        case 'created':\n          filteredTasks.sort((a, b) => \n            new Date(b.createdAt) - new Date(a.createdAt)\n          );\n          break;\n        default:\n          break;\n      }\n\n      // Распределение задач по группам\n      filteredTasks.forEach(task => {\n        const statusId = typeof task.status === 'object' ? task.status._id : task.status;\n        \n        if (statusId && groupedTasks[statusId]) {\n          groupedTasks[statusId].tasks.push(task);\n        } else {\n          // Если статус не найден в списке или его нет, добавляем в \"Неизвестный статус\"\n          const unknownId = \"unknown\";\n          if (!groupedTasks[unknownId]) {\n            groupedTasks[unknownId] = {\n              status: { \n                _id: unknownId, \n                name: \"Неизвестный статус\", \n                color: \"#CCCCCC\" \n              },\n              tasks: []\n            };\n          }\n          groupedTasks[unknownId].tasks.push(task);\n        }\n      });\n    } else {\n      // Если статусы не загружены, создаем временную группу \"Неизвестный статус\"\n      const unknownId = \"unknown\";\n      groupedTasks[unknownId] = {\n        status: { \n          _id: unknownId, \n          name: \"Неизвестный статус\", \n          color: \"#CCCCCC\" \n        },\n        tasks: tasks || []\n      };\n    }\n\n    return Object.values(groupedTasks);\n  };\n\n  // Получаем иконку в зависимости от статуса\n  const getStatusIcon = (statusName) => {\n    if (!statusName) return \"fas fa-question\";\n    \n    const name = statusName.toLowerCase();\n    if (name.includes(\"новый\") || name.includes(\"заказ\")) {\n      return \"fas fa-file\";\n    } else if (name.includes(\"работе\") || name.includes(\"процессе\")) {\n      return \"fas fa-spinner\";\n    } else if (name.includes(\"сварен\")) {\n      return \"fas fa-tools\";\n    } else if (name.includes(\"покрашен\")) {\n      return \"fas fa-paint-brush\";\n    } else if (name.includes(\"разработка\")) {\n      return \"fas fa-code\";\n    } else {\n      return \"fas fa-tasks\";\n    }\n  };\n\n  // Форматирование даты\n  const formatDate = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU');\n  };\n\n  // Определение класса приоритета\n  const getPriorityClass = (priority) => {\n    if (!priority) return '';\n    switch (priority.toLowerCase()) {\n      case 'high':\n      case 'высокий':\n        return 'priority-high';\n      case 'medium':\n      case 'средний':\n        return 'priority-medium';\n      case 'low':\n      case 'низкий':\n        return 'priority-low';\n      default:\n        return '';\n    }\n  };\n\n  // Получение названия категории по ID\n  const getCategoryName = (categoryId) => {\n    if (!categoryId || !settings || !settings.categories) return '';\n    const category = settings.categories.find(c => c.id === categoryId);\n    return category ? category.name : '';\n  };\n\n  // Получение цвета категории по ID\n  const getCategoryColor = (categoryId) => {\n    if (!categoryId || !settings || !settings.categories) return '';\n    const category = settings.categories.find(c => c.id === categoryId);\n    return category ? category.color : '';\n  };\n\n  // Главная часть компонента\n  return (\n    <div>\n      <div className=\"filter-controls\">\n        <select \n          className=\"form-control\"\n          value={sortBy}\n          onChange={e => setSortBy(e.target.value)}\n        >\n          <option value=\"deadline\">По сроку</option>\n          <option value=\"priority\">По приоритету</option>\n          <option value=\"created\">По дате создания</option>\n        </select>\n      </div>\n\n      {!tasks || tasks.length === 0 ? (\n        <div className=\"empty-state\">\n          <div className=\"empty-state-icon\">\n            <i className=\"fas fa-tasks\"></i>\n          </div>\n          <h3 className=\"empty-state-title\">Нет задач</h3>\n          <p className=\"empty-state-description\">Нажмите \"Добавить задачу\", чтобы создать новую задачу</p>\n          <button onClick={onAddTask} className=\"btn btn-primary\">\n            <i className=\"fas fa-plus\"></i> Добавить задачу\n          </button>\n        </div>\n      ) : (\n        <div className=\"task-columns\">\n          {groupTasksByStatus().map(group => (\n            <div \n              key={group.status._id} \n              className=\"task-column\"\n            >\n              <div className=\"column-header\" style={{ borderBottomColor: group.status.color || 'var(--primary-color)' }}>\n                <div className=\"column-title\">\n                  <i className={getStatusIcon(group.status.name)} style={{ color: group.status.color || 'var(--primary-color)' }}></i>\n                  {group.status.name}\n                </div>\n                <span \n                  className=\"task-count\"\n                  style={{ backgroundColor: group.status.color || 'var(--primary-color)' }}\n                >\n                  {group.tasks.length}\n                </span>\n              </div>\n              \n              {group.tasks.length === 0 ? (\n                <div className=\"empty-column\">\n                  Нет задач в этом статусе\n                </div>\n              ) : (\n                <div className=\"tasks-grid\">\n                  {group.tasks.map(task => (\n                    <Link key={task._id} to={`/tasks/${task._id}`} className=\"task-link\">\n                      <div className={`task-card ${getPriorityClass(task.priority)}`}>\n                        <h3 className=\"task-title\">{task.title || \"Без названия\"}</h3>\n                        {task.description && (\n                          <p className=\"task-description\">\n                            {task.description.length > 100\n                              ? `${task.description.substring(0, 100)}...`\n                              : task.description}\n                          </p>\n                        )}\n                        <div className=\"task-meta\">\n                          <div className=\"task-info\">\n                            {task.category && (\n                              <span className=\"task-category\" style={{ \n                                backgroundColor: `${getCategoryColor(task.category)}20`, \n                                color: getCategoryColor(task.category) \n                              }}>\n                                {getCategoryName(task.category)}\n                              </span>\n                            )}\n                            {task.dueDate && (\n                              <div className=\"task-due-date\">\n                                <i className=\"far fa-calendar-alt\"></i>\n                                {formatDate(task.dueDate)}\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"task-assignee\">\n                            {task.assignedTo && (\n                              <>\n                                <i className=\"far fa-user\"></i>\n                                {typeof task.assignedTo === 'object' \n                                  ? task.assignedTo.name \n                                  : 'Назначено'}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}