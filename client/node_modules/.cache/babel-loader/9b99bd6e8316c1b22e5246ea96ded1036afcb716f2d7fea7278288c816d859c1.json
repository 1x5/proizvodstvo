{"ast":null,"code":"var _jsxFileName = \"/Users/ll/proizvodstvo/client/src/components/tasks/TaskList.js\",\n  _s = $RefreshSig$();\n// client/src/components/tasks/TaskList.js\nimport React, { useContext, useEffect } from 'react';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport TaskItem from './TaskItem';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n  const {\n    tasks,\n    loading,\n    getTasks\n  } = taskContext;\n  const {\n    statuses,\n    getStatuses\n  } = statusContext;\n  useEffect(() => {\n    getTasks();\n    getStatuses();\n    // eslint-disable-next-line\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  const groupTasksByStatus = () => {\n    const groupedTasks = {};\n\n    // Инициализация групп для всех статусов\n    statuses.forEach(status => {\n      groupedTasks[status._id] = {\n        status,\n        tasks: []\n      };\n    });\n\n    // Распределение задач по группам\n    tasks.forEach(task => {\n      if (groupedTasks[task.status._id]) {\n        groupedTasks[task.status._id].tasks.push(task);\n      }\n    });\n    return Object.values(groupedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-tasks\",\n      children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-columns\",\n      children: groupTasksByStatus().map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-column-header\",\n          style: {\n            backgroundColor: group.status.color || '#3498db'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: group.status.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-count\",\n            children: group.tasks.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-column-body\",\n          children: group.tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, group.status._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"2tNexcJqbItiEglX1TQoEeTU1bA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","useEffect","TaskContext","StatusContext","TaskItem","Spinner","jsxDEV","_jsxDEV","TaskList","_s","taskContext","statusContext","tasks","loading","getTasks","statuses","getStatuses","fileName","_jsxFileName","lineNumber","columnNumber","groupTasksByStatus","groupedTasks","forEach","status","_id","task","push","Object","values","className","children","length","map","group","style","backgroundColor","color","name","_c","$RefreshReg$"],"sources":["/Users/ll/proizvodstvo/client/src/components/tasks/TaskList.js"],"sourcesContent":["// client/src/components/tasks/TaskList.js\nimport React, { useContext, useEffect } from 'react';\nimport { TaskContext } from '../../context/TaskContext';\nimport { StatusContext } from '../../context/StatusContext';\nimport TaskItem from './TaskItem';\nimport Spinner from '../layout/Spinner';\n\nconst TaskList = () => {\n  const taskContext = useContext(TaskContext);\n  const statusContext = useContext(StatusContext);\n\n  const { tasks, loading, getTasks } = taskContext;\n  const { statuses, getStatuses } = statusContext;\n\n  useEffect(() => {\n    getTasks();\n    getStatuses();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  const groupTasksByStatus = () => {\n    const groupedTasks = {};\n    \n    // Инициализация групп для всех статусов\n    statuses.forEach(status => {\n      groupedTasks[status._id] = {\n        status,\n        tasks: []\n      };\n    });\n\n    // Распределение задач по группам\n    tasks.forEach(task => {\n      if (groupedTasks[task.status._id]) {\n        groupedTasks[task.status._id].tasks.push(task);\n      }\n    });\n\n    return Object.values(groupedTasks);\n  };\n\n  return (\n    <div className=\"task-list\">\n      {tasks.length === 0 ? (\n        <p className=\"no-tasks\">Нет задач</p>\n      ) : (\n        <div className=\"task-columns\">\n          {groupTasksByStatus().map(group => (\n            <div key={group.status._id} className=\"task-column\">\n              <div \n                className=\"task-column-header\" \n                style={{ backgroundColor: group.status.color || '#3498db' }}\n              >\n                <h3>{group.status.name}</h3>\n                <span className=\"task-count\">{group.tasks.length}</span>\n              </div>\n              <div className=\"task-column-body\">\n                {group.tasks.map(task => (\n                  <TaskItem key={task._id} task={task} />\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}