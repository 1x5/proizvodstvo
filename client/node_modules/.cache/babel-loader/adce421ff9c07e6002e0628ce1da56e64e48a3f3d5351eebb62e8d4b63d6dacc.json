{"ast":null,"code":"var _jsxFileName = \"/Users/ll/proizvodstvo/client/src/context/TaskContext.js\",\n  _s = $RefreshSig$();\n// client/src/context/TaskContext.js\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport taskReducer from './reducers/taskReducer';\n\n// Начальное состояние\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  tasks: [],\n  currentTask: null,\n  loading: true,\n  error: null\n};\n\n// Создание контекста\nexport const TaskContext = /*#__PURE__*/createContext(initialState);\n\n// Провайдер контекста\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(taskReducer, initialState);\n\n  // Получение всех задач\n  const getTasks = async () => {\n    try {\n      const res = await axios.get('/api/tasks');\n      dispatch({\n        type: 'GET_TASKS',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Получение задачи по ID\n  const getTaskById = async id => {\n    try {\n      const res = await axios.get(`/api/tasks/${id}`);\n      dispatch({\n        type: 'GET_TASK',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Создание новой задачи\n  const createTask = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/tasks', formData, config);\n      dispatch({\n        type: 'ADD_TASK',\n        payload: res.data\n      });\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n      return null;\n    }\n  };\n\n  // Обновление задачи\n  const updateTask = async (id, formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.put(`/api/tasks/${id}`, formData, config);\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: res.data\n      });\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n      return null;\n    }\n  };\n\n  // Добавление заметки к задаче\n  const addNote = async (taskId, text) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post(`/api/tasks/${taskId}/notes`, {\n        text\n      }, config);\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: res.data\n      });\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n      return null;\n    }\n  };\n\n  // Загрузка файла к задаче\n  const uploadFile = async (taskId, file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('taskId', taskId);\n    try {\n      const res = await axios.post('/api/files', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      dispatch({\n        type: 'FILE_UPLOADED',\n        payload: {\n          taskId,\n          file: res.data\n        }\n      });\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n      return null;\n    }\n  };\n\n  // Удаление файла\n  const deleteFile = async (fileId, taskId) => {\n    try {\n      await axios.delete(`/api/files/${fileId}`);\n      dispatch({\n        type: 'FILE_DELETED',\n        payload: {\n          taskId,\n          fileId\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Удаление задачи\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`/api/tasks/${id}`);\n      dispatch({\n        type: 'DELETE_TASK',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Очистка текущей задачи\n  const clearCurrentTask = () => {\n    dispatch({\n      type: 'CLEAR_CURRENT_TASK'\n    });\n  };\n\n  // Очистка ошибок\n  const clearErrors = () => {\n    dispatch({\n      type: 'CLEAR_ERRORS'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      currentTask: state.currentTask,\n      loading: state.loading,\n      error: state.error,\n      getTasks,\n      getTaskById,\n      createTask,\n      updateTask,\n      addNote,\n      uploadFile,\n      deleteFile,\n      deleteTask,\n      clearCurrentTask,\n      clearErrors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useReducer","axios","taskReducer","jsxDEV","_jsxDEV","initialState","tasks","currentTask","loading","error","TaskContext","TaskProvider","children","_s","state","dispatch","getTasks","res","get","type","payload","data","err","response","msg","getTaskById","id","createTask","formData","config","headers","post","updateTask","put","addNote","taskId","text","uploadFile","file","FormData","append","deleteFile","fileId","delete","deleteTask","clearCurrentTask","clearErrors","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ll/proizvodstvo/client/src/context/TaskContext.js"],"sourcesContent":["// client/src/context/TaskContext.js\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport taskReducer from './reducers/taskReducer';\n\n// Начальное состояние\nconst initialState = {\n  tasks: [],\n  currentTask: null,\n  loading: true,\n  error: null\n};\n\n// Создание контекста\nexport const TaskContext = createContext(initialState);\n\n// Провайдер контекста\nexport const TaskProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(taskReducer, initialState);\n\n  // Получение всех задач\n  const getTasks = async () => {\n    try {\n      const res = await axios.get('/api/tasks');\n\n      dispatch({\n        type: 'GET_TASKS',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Получение задачи по ID\n  const getTaskById = async (id) => {\n    try {\n      const res = await axios.get(`/api/tasks/${id}`);\n\n      dispatch({\n        type: 'GET_TASK',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Создание новой задачи\n  const createTask = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/tasks', formData, config);\n\n      dispatch({\n        type: 'ADD_TASK',\n        payload: res.data\n      });\n\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n      return null;\n    }\n  };\n\n  // Обновление задачи\n  const updateTask = async (id, formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/tasks/${id}`, formData, config);\n\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: res.data\n      });\n\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n      return null;\n    }\n  };\n\n  // Добавление заметки к задаче\n  const addNote = async (taskId, text) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post(`/api/tasks/${taskId}/notes`, { text }, config);\n\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: res.data\n      });\n\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n      return null;\n    }\n  };\n\n  // Загрузка файла к задаче\n  const uploadFile = async (taskId, file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('taskId', taskId);\n\n    try {\n      const res = await axios.post('/api/files', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      dispatch({\n        type: 'FILE_UPLOADED',\n        payload: { taskId, file: res.data }\n      });\n\n      return res.data;\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n      return null;\n    }\n  };\n\n  // Удаление файла\n  const deleteFile = async (fileId, taskId) => {\n    try {\n      await axios.delete(`/api/files/${fileId}`);\n\n      dispatch({\n        type: 'FILE_DELETED',\n        payload: { taskId, fileId }\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Удаление задачи\n  const deleteTask = async (id) => {\n    try {\n      await axios.delete(`/api/tasks/${id}`);\n\n      dispatch({\n        type: 'DELETE_TASK',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TASK_ERROR',\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Очистка текущей задачи\n  const clearCurrentTask = () => {\n    dispatch({ type: 'CLEAR_CURRENT_TASK' });\n  };\n\n  // Очистка ошибок\n  const clearErrors = () => {\n    dispatch({ type: 'CLEAR_ERRORS' });\n  };\n\n  return (\n    <TaskContext.Provider\n      value={{\n        tasks: state.tasks,\n        currentTask: state.currentTask,\n        loading: state.loading,\n        error: state.error,\n        getTasks,\n        getTaskById,\n        createTask,\n        updateTask,\n        addNote,\n        uploadFile,\n        deleteFile,\n        deleteTask,\n        clearCurrentTask,\n        clearErrors\n      }}\n    >\n      {children}\n    </TaskContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}